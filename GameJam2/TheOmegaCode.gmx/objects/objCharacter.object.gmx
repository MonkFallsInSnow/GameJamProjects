<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//character/ability sheet identifiers
enum headers
{
    IDENTIFIER = 0,
    COL1 = 1,
    COL2 = 2,
    COL3 = 3,
    COL4 = 4,
    COL5 = 5,
    COL6 = 6,
    COL7 = 7,
    COL8 = 8,
    COL9 = 9,
    COL10 = 10,
    COL11 = 11,
    COL12 = 12,
    COL13 = 13,
    COL14 = 14,
    COL15 = 15,
    COL16 = 16,
    COL17 = 17,
}

enum charSheetY
{
    NAME = 0,
    LEVEL = 1,
    HP = 2,
    DURABILITY = 3,
    AI = 4,
    PROCESSING = 5,
    TACTICS = 6,
    AGILITY = 7,
    LUCK = 8,
    PRECISION = 9,
    PROPULSION = 10,
    ACTION_POINTS = 11,
    EVASION_CHANCE = 12,
    CRIT_CHANCE = 13,
    ATTACK_POWER = 14,
    ARMOR_RATING = 15,
    ALIVE = 16,
    XP = 17
}


//ability grid headers (row)
enum abilityHeaderY
{
    NAME = 0,
    CLASS = 1,
    TYPE = 2,
    AP_COST = 3,
    DAMAGE = 4,
    AQUIRED = 5
}


//starting stat values
/*durability = 0;
ai = 0;
processing = 0;
tactics = 0;
agility = 0;
luck = 0;
precision = 0;
level = 0;*/
hpMod = 75;
apMod = 15; 
evasionMod = 2;
critMod = 2;
attPowerMod = 2;
armorMod = 1.5

//basicActionPointCost = 10;
//advActionPointCost = 20;

//character sheet creation and identifiers
characterSheet = ds_grid_create(2,18);

ds_grid_add(characterSheet,0,0,"Name");
ds_grid_add(characterSheet,0,1,"Level");
ds_grid_add(characterSheet,0,2,"HP");
ds_grid_add(characterSheet,0,3,"Frame Durability");
ds_grid_add(characterSheet,0,4,"Artificial Intelligence");
ds_grid_add(characterSheet,0,5,"Processing Power");
ds_grid_add(characterSheet,0,6,"Tactical Computing");
ds_grid_add(characterSheet,0,7,"Maneuverability");
ds_grid_add(characterSheet,0,8,"Probability Matrix");
ds_grid_add(characterSheet,0,9,"Targeting Precision");
ds_grid_add(characterSheet,0,10,"Propulsion");
ds_grid_add(characterSheet,0,11,"Action Points");
ds_grid_add(characterSheet,0,12,"Evasion");
ds_grid_add(characterSheet,0,13,"Critical Chance");
ds_grid_add(characterSheet,0,14,"Attack Power");
ds_grid_add(characterSheet,0,15,"Armor Rating");
ds_grid_add(characterSheet,0,16,"Alive");
ds_grid_add(characterSheet,0,17,"XP");

//character abilities sheet
abilities = ds_grid_create(6,6);

//abilities list identifiers - first column
ds_grid_add(abilities,0,0,"Name"); //ability name
ds_grid_add(abilities,0,1,"Class"); //class restriction
ds_grid_add(abilities,0,2,"Type"); // attack type
ds_grid_add(abilities,0,3,"AP Cost"); //action point cost
ds_grid_add(abilities,0,4,"Damage"); //how much base damage it does
ds_grid_add(abilities,0,5,"Aquired"); //does the player have it

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
