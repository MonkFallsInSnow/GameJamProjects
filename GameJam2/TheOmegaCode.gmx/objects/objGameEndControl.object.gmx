<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gameOver = true;

newScale1 = 2;
newScale2 = 2;
newScale3 = 0;
newScale4 = 0;

//reset font
draw_set_halign(fa_left);
draw_set_valign(fa_left);
draw_set_font(font_UI);
draw_set_color(c_black);

//hide and lock mouse cursor after death
window_set_cursor(cr_none);

//destroy all control objects and character objects
with(objGameControl)
{
    instance_destroy();
}
with(objBattleControl)
{
    instance_destroy();
}
with(objClassSelectionControl)
{
    instance_destroy();
}
with(objUpgradeTerminalControl)
{
    instance_destroy();
}
with(objLevelControl)
{
    instance_destroy();
}
with(objTitle)
{
    instance_destroy();
}
with(objCharacter)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//restart game after player death
if(room == rmDeath)
{ 
    if(keyboard_check(vk_enter))
    {
        game_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>endMessage = "Critical Failure"; 

draw_set_colour(c_red);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

newScale1 += 0.02;
newScale2 += 0.02;
newScale3 += 0.01;
newScale4 += 0.01;

if(newScale1 &lt; 8 &amp;&amp; newScale2 &lt; 8)
{
    draw_text_transformed(room_width / 2, room_height / 2, endMessage,newScale1,newScale2,image_angle);
}
else
{
    draw_text_transformed(room_width / 2, room_height / 2, endMessage,8,8,image_angle);
    if(gameOver)
    {
        alarm[0] = 90;
        gameOver = false;
    }
}


for(var i = 1; i &lt;= room_width; i += 20)
{

    for(var j = 0; j &lt;= room_height; j += 20)
    {
        var number = irandom(1);
        draw_set_color(c_green);
        if(newScale3 &lt; 1 &amp;&amp; newScale4 &lt; 1)
        {
            draw_text_transformed(i,j,number,newScale3,newScale4,image_angle);
        }
        else
        {
            draw_text_transformed(i,j,number,1,1,image_angle);
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
