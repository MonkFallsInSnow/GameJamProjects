<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playDeadSound = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rmDeath)
{
    if(playDeadSound)
    {
        audio_stop_all();
        
        if(!audio_is_playing(sndPlayerDeath))
        {
            audio_play_sound(sndPlayerDeath,1,false);
        }
        
        playDeadSound = false;
    }
    
    
}
//tutorial room and room 1 music
else if(objGameControl.playerRoom == rm1_0 || objGameControl.playerRoom == rmTutorial)
{
    if(room == rmBattle)
    {
        if(!audio_is_paused(sndBckMusic1))
        {
            audio_pause_sound(sndBckMusic1);
        }
        
        if(!audio_is_playing(sndBattleMusicTech))
        {
            audio_play_sound(sndBattleMusicTech,1,true);
        }
    }
    else
    {
        if(audio_is_playing(sndBattleMusicTech))
        {
            audio_stop_sound(sndBattleMusicTech);
        }
        
        if(audio_is_paused(sndBckMusic1))
        {
            audio_resume_sound(sndBckMusic1);
        }
        else if(!audio_is_playing(sndBckMusic1))
        {
            audio_play_sound(sndBckMusic1,1,true);
        }
        
        /*if(!audio_is_playing(sndBckMusic1))
        {
            audio_play_sound(sndBckMusic1,1,true);
        }*/
    }
}
//room 2 music
else if(objGameControl.playerRoom == rm2_0)
{
    if(audio_is_playing(sndBckMusic1))
    {
        audio_stop_sound(sndBckMusic1);
    }
    
     if(room == rmBattle)
    {
        if(!audio_is_paused(sndBckMusic2))
        {
            audio_pause_sound(sndBckMusic2);
        }
        
        if(!audio_is_playing(sndBattleMusicTech))
        {
            audio_play_sound(sndBattleMusicTech,1,true);
        }
    }
    else
    {
        if(audio_is_playing(sndBattleMusicTech))
        {
            audio_stop_sound(sndBattleMusicTech);
        }
        
        if(audio_is_paused(sndBckMusic2))
        {
            audio_resume_sound(sndBckMusic2);
        }
        else if(!audio_is_playing(sndBckMusic2))
        {
            audio_play_sound(sndBckMusic2,1,true);
        }
        
        /*if(!audio_is_playing(sndBckMusic2))
        {
            audio_play_sound(sndBckMusic2,1,true);
        }*/
    }
}
//room 3 music
else if(objGameControl.playerRoom == rm3_0)
{
    if(audio_is_playing(sndBckMusic2))
    {
        audio_stop_sound(sndBckMusic2);
    }
    
     if(room == rmBattle)
     {
        if(!audio_is_paused(sndBckMusic3))
        {
            audio_pause_sound(sndBckMusic3);
        }
        
        if(!audio_is_playing(sndBattleMusicTech))
        {
            audio_play_sound(sndBattleMusicTech,1,true);
        }
    }
    else
    {
        if(audio_is_playing(sndBattleMusicTech))
        {
            audio_stop_sound(sndBattleMusicTech);
        }
        
        if(audio_is_paused(sndBckMusic3))
        {
            audio_resume_sound(sndBckMusic3);
        }
        else if(!audio_is_playing(sndBckMusic3))
        {
            audio_play_sound(sndBckMusic3,1,true);
        }
        
        /*if(!audio_is_playing(sndBckMusic3))
        {
            audio_play_sound(sndBckMusic3,1,true);
        }*/
    }
}//room 2 music
else if(objGameControl.playerRoom == rm4_0)
{
    if(audio_is_playing(sndBckMusic3))
    {
        audio_stop_sound(sndBckMusic3);
    }
    
     if(room == rmBattle)
    {
        if(!audio_is_paused(sndBckMusic4))
        {
            audio_pause_sound(sndBckMusic4);
        }
        
        if(!audio_is_playing(sndBattleMusicTech))
        {
            audio_play_sound(sndBattleMusicTech,1,true);
        }
    }
    else
    {
        if(audio_is_playing(sndBattleMusicTech))
        {
            audio_stop_sound(sndBattleMusicTech);
        }
        
        if(audio_is_paused(sndBckMusic4))
        {
            audio_resume_sound(sndBckMusic4);
        }
        else if(!audio_is_playing(sndBckMusic4))
        {
            audio_play_sound(sndBckMusic4,1,true);
        }
        
        /*if(!audio_is_playing(sndBckMusic4))
        {
            audio_play_sound(sndBckMusic4,1,true);
        }*/
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
