<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRangedDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//inherits playerSpeed variable defined in parent object
event_inherited();

//starting stat values
durability = 2;
ai = 3;
processing = 2;
tactics = 2;
agility = 3;
luck = 2;
precision = 4;
level = 1;

//starting stat calculations
hitPoints = durability * hpMod;
actionPoints = ai * apMod;
evasionChance = round(agility / evasionMod);
critChance = round(precision / critMod);
attackPower = tactics * attPowerMod;
armorRating = round(tactics * armorMod);

//character sheet
ds_grid_add(characterSheet,1,0,name); //name
ds_grid_add(characterSheet,1,1,level); //level
ds_grid_add(characterSheet,1,2,hitPoints); //hp
ds_grid_add(characterSheet,1,3,durability); //durability
ds_grid_add(characterSheet,1,4,ai); //ai
ds_grid_add(characterSheet,1,5,processing); //processing
ds_grid_add(characterSheet,1,6,tactics); //tactics
ds_grid_add(characterSheet,1,7,agility); //agility
ds_grid_add(characterSheet,1,8,luck); //luck
ds_grid_add(characterSheet,1,9,precision); //precision
ds_grid_add(characterSheet,1,10,playerSpeed); //speed
ds_grid_add(characterSheet,1,11,actionPoints); //action points
ds_grid_add(characterSheet,1,12,evasionChance); //evasion
ds_grid_add(characterSheet,1,13,critChance); //hit rate
ds_grid_add(characterSheet,1,14,attackPower); //attack power
ds_grid_add(characterSheet,1,15,armorRating); //armor rating
ds_grid_add(characterSheet,1,16,true); //alive
ds_grid_add(characterSheet,1,17,xp); //xp

//abilities
ds_grid_add(abilities,1,0,"Shot"); //ability name
ds_grid_add(abilities,1,1,RANGED); //class restriction
ds_grid_add(abilities,1,2,BASIC); // attack or buff
ds_grid_add(abilities,1,3,5); //action point cost
ds_grid_add(abilities,1,4,noone); //how much base damage it does
ds_grid_add(abilities,1,5,true); //does the player have it

ds_grid_add(abilities,2,0,"Laser Screen");
ds_grid_add(abilities,2,1,RANGED); 
ds_grid_add(abilities,2,2,AOE); 
ds_grid_add(abilities,2,3,20); 
ds_grid_add(abilities,2,4,noone); 
ds_grid_add(abilities,2,5,false);

ds_grid_add(abilities,3,0,"Energy Lasso");
ds_grid_add(abilities,3,1,RANGED); 
ds_grid_add(abilities,3,2,ADV); 
ds_grid_add(abilities,3,3,30); 
ds_grid_add(abilities,3,4,noone); 
ds_grid_add(abilities,3,5,false);

ds_grid_add(abilities,4,0,"Scavenge Components");
ds_grid_add(abilities,4,1,RANGED); 
ds_grid_add(abilities,4,2,HEAL); 
ds_grid_add(abilities,4,3,50); 
ds_grid_add(abilities,4,4,noone); 
ds_grid_add(abilities,4,5,false);

ds_grid_add(abilities,5,0,"Plasma Burn");
ds_grid_add(abilities,5,1,RANGED); 
ds_grid_add(abilities,5,2,INST_KILL); 
ds_grid_add(abilities,5,3,80); 
ds_grid_add(abilities,5,4,noone); 
ds_grid_add(abilities,5,5,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,15</point>
    <point>15,15</point>
  </PhysicsShapePoints>
</object>
