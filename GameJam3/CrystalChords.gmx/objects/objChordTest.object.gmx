<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player 1 chord test
if(instance_exists(objPlayer))
{
    if(objPlayer.nodeA[0] != noone &amp;&amp; objPlayer.nodeC[0] != noone &amp;&amp; objPlayer.nodeE[0] != noone)
    {
        objPlayer.nodeA[0].sprite_index = sprWeaponAOn;
        objPlayer.nodeC[0].sprite_index = sprWeaponCOn;
        objPlayer.nodeE[0].sprite_index = sprWeaponEOn;
    }
    else if(objPlayer.nodeG[0] != noone &amp;&amp; objPlayer.nodeB[0] != noone &amp;&amp; objPlayer.nodeD[0] != noone)
    {
        objPlayer.nodeG[0].sprite_index = sprWeaponGOn;
        objPlayer.nodeB[0].sprite_index = sprWeaponBOn;
        objPlayer.nodeD[0].sprite_index = sprWeaponDOn;
    }
    else if(objPlayer.nodeG[0] != noone &amp;&amp; objPlayer.nodeB[0] != noone &amp;&amp; objPlayer.nodeD[0] != noone)
    {
        objPlayer.nodeG[0].sprite_index = sprWeaponGOn;
        objPlayer.nodeB[0].sprite_index = sprWeaponBOn;
        objPlayer.nodeD[0].sprite_index = sprWeaponDOn;
    }
    else if(objPlayer.nodeF[0] != noone &amp;&amp; objPlayer.nodeA[0] != noone &amp;&amp; objPlayer.nodeC[0] != noone)
    {
        objPlayer.nodeF[0].sprite_index = sprWeaponFOn;
        objPlayer.nodeA[0].sprite_index = sprWeaponAOn;
        objPlayer.nodeC[0].sprite_index = sprWeaponCOn;
    }
    else if(objPlayer.nodeE[0] != noone &amp;&amp; objPlayer.nodeG[0] != noone &amp;&amp; objPlayer.nodeB[0] != noone)
    {
        objPlayer.nodeE[0].sprite_index = sprWeaponEOn;
        objPlayer.nodeG[0].sprite_index = sprWeaponGOn;
        objPlayer.nodeB[0].sprite_index = sprWeaponBOn;
    }
    else if(objPlayer.nodeD[0] != noone &amp;&amp; objPlayer.nodeF[0] != noone &amp;&amp; objPlayer.nodeA[0] != noone)
    {
        objPlayer.nodeD[0].sprite_index = sprWeaponDOn;
        objPlayer.nodeF[0].sprite_index = sprWeaponFOn;
        objPlayer.nodeA[0].sprite_index = sprWeaponAOn;
    }
    else if(objPlayer.nodeC[0] != noone &amp;&amp; objPlayer.nodeE[0] != noone &amp;&amp; objPlayer.nodeG[0] != noone)
    {
        objPlayer.nodeC[0].sprite_index = sprWeaponCOn;
        objPlayer.nodeE[0].sprite_index = sprWeaponEOn;
        objPlayer.nodeG[0].sprite_index = sprWeaponGOn;
    }
}
//player 2 chord test
if(instance_exists(objPlayer2))
{
    if(objPlayer2.nodeA[0] != noone &amp;&amp; objPlayer2.nodeC[0] != noone &amp;&amp; objPlayer2.nodeE[0] != noone)
    {
        objPlayer2.nodeA[0].sprite_index = sprWeaponAOn;
        objPlayer2.nodeC[0].sprite_index = sprWeaponCOn;
        objPlayer2.nodeE[0].sprite_index = sprWeaponEOn;
    }
    else if(objPlayer2.nodeG[0] != noone &amp;&amp; objPlayer2.nodeB[0] != noone &amp;&amp; objPlayer2.nodeD[0] != noone)
    {
        objPlayer2.nodeG[0].sprite_index = sprWeaponGOn;
        objPlayer2.nodeB[0].sprite_index = sprWeaponBOn;
        objPlayer2.nodeD[0].sprite_index = sprWeaponDOn;
    }
    else if(objPlayer2.nodeG[0] != noone &amp;&amp; objPlayer2.nodeB[0] != noone &amp;&amp; objPlayer2.nodeD[0] != noone)
    {
        objPlayer2.nodeG[0].sprite_index = sprWeaponGOn;
        objPlayer2.nodeB[0].sprite_index = sprWeaponBOn;
        objPlayer2.nodeD[0].sprite_index = sprWeaponDOn;
    }
    else if(objPlayer2.nodeF[0] != noone &amp;&amp; objPlayer2.nodeA[0] != noone &amp;&amp; objPlayer2.nodeC[0] != noone)
    {
        objPlayer2.nodeF[0].sprite_index = sprWeaponFOn;
        objPlayer2.nodeA[0].sprite_index = sprWeaponAOn;
        objPlayer2.nodeC[0].sprite_index = sprWeaponCOn;
    }
    else if(objPlayer2.nodeE[0] != noone &amp;&amp; objPlayer2.nodeG[0] != noone &amp;&amp; objPlayer2.nodeB[0] != noone)
    {
        objPlayer2.nodeE[0].sprite_index = sprWeaponEOn;
        objPlayer2.nodeG[0].sprite_index = sprWeaponGOn;
        objPlayer2.nodeB[0].sprite_index = sprWeaponBOn;
    }
    else if(objPlayer2.nodeD[0] != noone &amp;&amp; objPlayer2.nodeF[0] != noone &amp;&amp; objPlayer2.nodeA[0] != noone)
    {
        objPlayer2.nodeD[0].sprite_index = sprWeaponDOn;
        objPlayer2.nodeF[0].sprite_index = sprWeaponFOn;
        objPlayer2.nodeA[0].sprite_index = sprWeaponAOn;
    }
    else if(objPlayer2.nodeC[0] != noone &amp;&amp; objPlayer2.nodeE[0] != noone &amp;&amp; objPlayer2.nodeG[0] != noone)
    {
        objPlayer2.nodeC[0].sprite_index = sprWeaponCOn;
        objPlayer2.nodeE[0].sprite_index = sprWeaponEOn;
        objPlayer2.nodeG[0].sprite_index = sprWeaponGOn;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
