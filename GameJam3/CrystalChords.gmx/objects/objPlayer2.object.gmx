<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer2Down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayerParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_alpha = 0;
moveSpeed = DEFAULT_SPEED;
playerHealth = DEFAULT_HEALTH;
moveDir = IDLE;
currentWeapon = noone;
canShoot = true;
nodeCount = 0;
decoyCount = 0;
canMove = false;
topSpeed = moveSpeed * 2;
shieldUp = false;

nodeA[0] = noone;
nodeB[0] = noone;
nodeC[0] = noone;
nodeD[0] = noone;
nodeE[0] = noone;
nodeF[0] = noone;
nodeG[0] = noone;

nodeIndexA = 0;
nodeIndexB = 0;
nodeIndexC = 0;
nodeIndexD = 0;
nodeIndexE = 0;
nodeIndexF = 0;
nodeIndexG = 0;

shotsFired[0] = noone;
copies[0] = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = objPlayer2Spawn.x;
y = objPlayer2Spawn.y;
image_index = sprPlayer2Down;
instance_create(objPlayer2Spawn.x, objPlayer2Spawn.y,objEntranceTeleport);
playerHealth = DEFAULT_HEALTH;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canShoot timer </string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movement code
if(keyboard_check(ord("W")) || keyboard_check(vk_up) || gamepad_axis_value(objGamepad.player2,gp_axislv) &lt; -objGamepad.threshold)
{
    moveDir = UP;
    playerMove(objPlayer2,moveDir,sprPlayer2Up,moveSpeed);
}
else if(keyboard_check(ord("S")) || keyboard_check(vk_down) || gamepad_axis_value(objGamepad.player2,gp_axislv) &gt; objGamepad.threshold)
{
    moveDir = DOWN;
    playerMove(objPlayer2,moveDir,sprPlayer2Down,moveSpeed);
}
else if(keyboard_check(ord("A")) || keyboard_check(vk_left) || gamepad_axis_value(objGamepad.player2,gp_axislh) &lt; -objGamepad.threshold)
{
    moveDir = LEFT;
    playerMove(objPlayer2,moveDir,sprPlayer2Left,moveSpeed);
}
else if(keyboard_check(ord("D")) || keyboard_check(vk_right) || gamepad_axis_value(objGamepad.player2,gp_axislh) &gt; objGamepad.threshold)
{
    moveDir = RIGHT;
    playerMove(objPlayer2,moveDir,sprPlayer2Right,moveSpeed);
}
else
{
   moveDir = IDLE;
   playerMove(objPlayer2,moveDir,sprPlayer2Up,moveSpeed);
}

//select weapon
if(nodeCount &lt; 3)
{
    if(keyboard_check(vk_numpad1) || keyboard_check(ord("1")))
    {
        currentWeapon = WEAPON_A; 
        placeNode(self,currentWeapon,Stack2);
    }
    else if(keyboard_check(vk_numpad2) || keyboard_check(ord("2")))
    {
        currentWeapon = WEAPON_B;
        placeNode(self,currentWeapon,Stack2);
    }
    if(keyboard_check(vk_numpad3) || keyboard_check(ord("3")))
    {
        currentWeapon = WEAPON_C; 
        placeNode(self,currentWeapon,Stack2);
    }
    else if(keyboard_check(vk_numpad4) || keyboard_check(ord("4")))
    {
        currentWeapon = WEAPON_D;
        placeNode(self,currentWeapon,Stack2);
    }
    if(keyboard_check(vk_numpad5) || keyboard_check(ord("5")))
    {
        currentWeapon = WEAPON_E;
        placeNode(self,currentWeapon,Stack2); 
    }
    else if(keyboard_check(vk_numpad6) || keyboard_check(ord("6")))
    {
        currentWeapon = WEAPON_F;
        placeNode(self,currentWeapon,Stack2);
    }
    else if(keyboard_check(vk_numpad7) || keyboard_check(ord("7")))
    {
        currentWeapon = WEAPON_G;
        placeNode(self,currentWeapon,Stack2);
    }
}

//activate weapons
if(keyboard_check_released(vk_enter))
{
    if(nodeCount == 3)
    {
        activateWeapon(objPlayer2,Stack2);
        nodeCount = 0;
    }
}

//test for death
{
    if(playerHealth &lt;= 0)
    {
        instance_create(x,y,objBlood);
        audio_play_sound(sndBlood,1,false);
        image_alpha = 0;
        x = room_width * -1;
        alarm[1] = 120;
        playerHealth = 1;
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
